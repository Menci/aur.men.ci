name: Download PKGBUILD
description: Download PKGBUILD and other required files for a target from AUR/MPR
inputs:
  package-type:
    description: The package type. Possible values are "pacman" and "deb".
    required: true
  target-name:
    description: The AUR/MPR target name to download.
    required: true
  target-ref:
    description: The AUR/MPR target ref to download.
    required: true
  extract-directory:
    description: The directory to extract the downloaded archive to. Must be non-exist.
    required: true
outputs:
  pkgbuild-directory:
    description: The directory containing downloaded and extracted PKGBUILD and other files.
    value: ${{ steps.download.outputs.pkgbuild-directory }}
runs:
  using: composite
  steps:
    - id: download
      shell: bash
      run: |
        if [[ -e "$EXTRACT_DIRECTORY" ]]; then
            echo "Specfied PKGBUILD extract directory already exists!"
            exit 1
        fi

        mkdir -p "$EXTRACT_DIRECTORY"
        if [[ "$PACKAGE_TYPE" == "pacman" ]]; then
            PACKAGE_REPO="https://aur.archlinux.org/$TARGET_NAME.git"
        elif [[ "$PACKAGE_TYPE" == "deb" ]]; then
            PACKAGE_REPO="https://mpr.makedeb.org/$TARGET_NAME.git"
        fi

        echo "Cloning MPR repo: $PACKAGE_REPO"
        git clone "$PACKAGE_REPO" "$EXTRACT_DIRECTORY/$TARGET_NAME"
        pushd "$EXTRACT_DIRECTORY/$TARGET_NAME"
        if [[ "$TARGET_REF" != "$TARGET_NAME" ]]; then
            git fetch origin "$TARGET_REF" && git checkout "$TARGET_REF"
        fi
        ls -lah
        popd

        PKGBUILD_DIRECTORY="$EXTRACT_DIRECTORY/$TARGET_NAME"
        echo "pkgbuild-directory=$PKGBUILD_DIRECTORY" >> $GITHUB_OUTPUT

        PKGBUILD_DIRNAME="$(basename "$PKGBUILD_DIRECTORY")"
        if [[ -e "patches/$PACKAGE_TYPE/$PKGBUILD_DIRNAME.patch" ]]; then
            PATCH_FILE="$(realpath "patches/$PACKAGE_TYPE/$PKGBUILD_DIRNAME.patch")"
            cd "$PKGBUILD_DIRECTORY"

            git apply "$PATCH_FILE"
            rm -rf .git
        fi
      env:
        PACKAGE_TYPE: ${{ inputs.package-type }}
        TARGET_NAME: ${{ inputs.target-name }}
        TARGET_REF: ${{ inputs.target-ref }}
        EXTRACT_DIRECTORY: ${{ inputs.extract-directory }}
